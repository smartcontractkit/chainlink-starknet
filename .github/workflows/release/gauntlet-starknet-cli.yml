name: Gauntlet Starknet CLI Release

on:
  push:
    tags:
      - "@chainlink/gauntlet-starknet-cli@[0-9]+.[0-9]+.[0-9]"

jobs:
  gauntlet-starknet-cli-release:
    name: Gauntlet Starknet CLI Release
    runs-on: ubuntu-latest
    steps:
      # Checkout this repository
      - name: Checkout Repo
        uses: actions/checkout@f25a3a9f25bd5f4c5d77189cab02ff357b5aedeb # v2.4.1
      # Get tool versions
      - name: Get tool versions
        uses: smartcontractkit/tool-versions-to-env-action@v1.0.7
        id: tool-versions
      # Install nix
      - name: Install Nix
        uses: cachix/install-nix-action@v14
        with:
          install_url: https://nixos-nix-install-tests.cachix.org/serve/vij683ly7sl95nnhb67bdjjfabclr85m/install
          install_options: '--tarball-url-prefix https://nixos-nix-install-tests.cachix.org/serve'
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      # Set up Node.js
      - name: Setup Node.js ${{ steps.tool-versions.outputs.nodejs_version }}
        uses: actions/setup-node@master
        with:
          node-version: ${{ steps.tool-versions.outputs.nodejs_version }}
      # Install dependencies using yarn
      - name: Install Dependencies
        run: nix develop -c yarn install --frozen-lockfile
      # Build gauntlet binary
      - name: Build Gauntlet
        run: nix develop -c yarn bundle
      # Store gauntlet-cli version
      - name: Set Env Variables
        run: echo "GAUNTLET_STARKNET_CLI=$(npm info @chainlink/gauntlet-starknet-cli version)" >> $GITHUB_ENV
      # Upload gauntlet binary to gauntlet-cli release
      - name: Upload Gauntlet Binary
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: bin/chainlink-starknet-*
          file_glob: true
          tag: |
            @chainlink/gauntlet-starknet-cli@${{ env.GAUNTLET_STARKNET_CLI }}
          overwrite: false
