// Code generated by mockery v2.29.0. DO NOT EDIT.

package mocks

import (
	context "context"
	big "math/big"

	felt "github.com/NethermindEth/juno/core/felt"

	mock "github.com/stretchr/testify/mock"
)

// NonceManagerClient is an autogenerated mock type for the NonceManagerClient type
type NonceManagerClient struct {
	mock.Mock
}

// AccountNonce provides a mock function with given fields: _a0, _a1
func (_m *NonceManagerClient) AccountNonce(_a0 context.Context, _a1 *felt.Felt) (*big.Int, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *big.Int
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *felt.Felt) (*big.Int, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *felt.Felt) *big.Int); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*big.Int)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *felt.Felt) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewNonceManagerClient interface {
	mock.TestingT
	Cleanup(func())
}

// NewNonceManagerClient creates a new instance of NonceManagerClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewNonceManagerClient(t mockConstructorTestingTNewNonceManagerClient) *NonceManagerClient {
	mock := &NonceManagerClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
