// Code generated by mockery v2.13.0-beta.1. DO NOT EDIT.

package mocks

import (
	time "time"

	mock "github.com/stretchr/testify/mock"
)

// TxConfig is an autogenerated mock type for the TxConfig type
type TxConfig struct {
	mock.Mock
}

// TxMaxBatchSize provides a mock function with given fields:
func (_m *TxConfig) TxMaxBatchSize() int {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// TxSendFrequency provides a mock function with given fields:
func (_m *TxConfig) TxSendFrequency() time.Duration {
	ret := _m.Called()

	var r0 time.Duration
	if rf, ok := ret.Get(0).(func() time.Duration); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(time.Duration)
	}

	return r0
}

// TxTimeout provides a mock function with given fields:
func (_m *TxConfig) TxTimeout() time.Duration {
	ret := _m.Called()

	var r0 time.Duration
	if rf, ok := ret.Get(0).(func() time.Duration); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(time.Duration)
	}

	return r0
}

type NewTxConfigT interface {
	mock.TestingT
	Cleanup(func())
}

// NewTxConfig creates a new instance of TxConfig. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTxConfig(t NewTxConfigT) *TxConfig {
	mock := &TxConfig{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
